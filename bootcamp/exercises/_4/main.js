/////////////////////////////////////////////////////
// Block 1: Make a Book builder, with the following properties:
// - id
// - title
// - author
// - sales
// - price
function Book(id, title, author , sales, price) {
  this.id = id;
  this.title = title;
  this.author = author;
  this.sales = sales;
  this.price = price;
};

// Addenda: make the id autogenerated
// Addenda: make the id autogenerated based on the rest of fields


/////////////////////////////////////////////////////
// Block 2: Create some books using the builder
let books = [
  new Book(1, "The Selfish Gene", "Richard Dawkins", 740120, 12),
  new Book(2, "The God Delusion", "Richard Dawkins", 610120, 15),
  new Book(3, "La nueva mente del emperador", "Roger Penrose", 120000, 17),
  new Book(4, "Sapiens: A Brief History of Humankind", " Yuval Noah Harari", 910120, 16),
  new Book(5, "The Selfish Gene", "Richard Dawkins", 740120, 12),
  new Book(6, "The God Delusion", "Richard Dawkins", 610120, 15),
];
// Addenda: make it random


/////////////////////////////////////////////////////
// Block 3: Make a function able to fill the table with the created books
// add a button as the last column of each record
const booksTbody = document.getElementById("books-body");

function emptyTable () {
  booksTbody.innerHTML = "";
}

function updateTable() {
  emptyTable();
  books.forEach(book => {
      booksTbody.innerHTML += `
      <tr>
          <td>${book.id}</td>
          <td>${book.title}</td>
          <td>${book.author}</td>
          <td>${book.sales}</td>
          <td>${book.price}</td>
          <td>
              <button class = "btn btn-danger" id ="${book.id}">Remove</button>
          </td>
      </tr>`;  
  });
}

// Addenda: make a "createRow" function receiving a book and returning the HTML code for that row
// Addenda: use map to transform the books array into an array of <tr>

/////////////////////////////////////////////////////
// Block 4 - Delete a specific record when its button is clicked
booksTbody.onclick = e => {
  if(e.target.tagName === "BUTTON") {
      books = books.filter(book => book.id != e.target.id);
      updateTable();
  }  
};

// Addenda: add a specific function for each recordon table creation

// init table
updateTable();


/////////////////////////////////////////////////////
// Block 5 - Add the code to add a new record when the form is filled
// and submitted
const titleInput = document.getElementById("titleInput");
const authorInput = document.getElementById("authorInput");
const salesInput = document.getElementById("salesInput");
const priceInput = document.getElementById("priceInput");
const addBookButton = document.getElementById("addBookButton");
addBookButton.addEventListener("click", e => {
  e.preventDefault();
  const newID = books[books.length-1].id + 1;
  books.push(new Book(
    newID, 
    titleInput.value, 
    authorInput.value, 
    salesInput.value, 
    priceInput.value)
  );
  // refresh data
  updateTable();
  // clear the form
  titleInput.value = "";
  authorInput.value = "";
  salesInput.value = "";
  priceInput.value = "";
});

// Addenda: add some validation on the form fields before adding the new row
// Addenda: do a resetForm function to clean the fields after the record has been added
// Addenda: use the event "submit" on the form instead of the button click
// Addenda: think of a way to improve the way we are building the entire table each time we call updateTable()
